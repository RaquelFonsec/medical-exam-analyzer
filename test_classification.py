#!/usr/bin/env python3
"""
Teste da nova funcionalidade de classifica√ß√£o de benef√≠cio e CID
"""

import requests
import json

def test_auxilio_doenca():
    """Testa caso que deve ser classificado como AUX√çLIO DOEN√áA"""
    
    url = "http://localhost:5003/api/intelligent-medical-analysis"
    
    # Caso t√≠pico de aux√≠lio doen√ßa - problema tempor√°rio
    patient_info = """
    Jo√£o Silva, 35 anos, mec√¢nico.
    Queixa: Fratura do punho direito ap√≥s acidente de trabalho h√° 2 semanas.
    Sintomas: Dor intensa, limita√ß√£o de movimento, incha√ßo.
    Est√° em tratamento ortop√©dico, usando tala gessada.
    Previs√£o de recupera√ß√£o em 6-8 semanas com fisioterapia.
    N√£o consegue trabalhar com ferramentas pesadas atualmente.
    """
    
    data = {'patient_info': patient_info.strip()}
    
    print("üß™ TESTE 1: Caso de AUX√çLIO DOEN√áA")
    print(f"üìù Paciente: Jo√£o, mec√¢nico, fratura punho...")
    
    try:
        response = requests.post(url, data=data, timeout=30)
        
        if response.status_code == 200:
            result = response.json()
            
            if result.get('benefit_classification'):
                bc = result['benefit_classification']
                print(f"\n‚úÖ CLASSIFICA√á√ÉO OBTIDA:")
                print(f"   Tipo: {bc['tipo_beneficio']}")
                print(f"   CID: {bc['cid_principal']} - {bc['cid_descricao']}")
                print(f"   Gravidade: {bc['gravidade']}")
                print(f"   Justificativa: {bc['justificativa']}")
                
                if bc['tipo_beneficio'] == 'AUXILIO_DOENCA':
                    print("‚úÖ CORRETO: Classificado como Aux√≠lio Doen√ßa!")
                else:
                    print("‚ö†Ô∏è ATEN√á√ÉO: N√£o classificado como esperado")
            else:
                print("‚ùå Classifica√ß√£o n√£o retornada")
        else:
            print(f"‚ùå Erro HTTP: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Erro: {e}")

def test_pericia_medica():
    """Testa caso que deve ser classificado como PER√çCIA M√âDICA"""
    
    url = "http://localhost:5003/api/intelligent-medical-analysis"
    
    # Caso t√≠pico de per√≠cia m√©dica - doen√ßa cr√¥nica
    patient_info = """
    Maria Santos, 58 anos, professora.
    Queixa: Artrite reumatoide severa h√° 5 anos, progressiva.
    Sintomas: Dor cr√¥nica em m√∫ltiplas articula√ß√µes, deformidades nas m√£os, 
    rigidez matinal por mais de 2 horas, fadiga extrema.
    Hist√≥rico: M√∫ltiplas interna√ß√µes, uso cont√≠nuo de corticoides e imunossupressores.
    Incapacidade total para atividades laborais.
    Progn√≥stico: Doen√ßa progressiva sem cura, limita√ß√£o permanente.
    """
    
    data = {'patient_info': patient_info.strip()}
    
    print("\nüß™ TESTE 2: Caso de PER√çCIA M√âDICA")
    print(f"üìù Paciente: Maria, professora, artrite reumatoide severa...")
    
    try:
        response = requests.post(url, data=data, timeout=30)
        
        if response.status_code == 200:
            result = response.json()
            
            if result.get('benefit_classification'):
                bc = result['benefit_classification']
                print(f"\n‚úÖ CLASSIFICA√á√ÉO OBTIDA:")
                print(f"   Tipo: {bc['tipo_beneficio']}")
                print(f"   CID: {bc['cid_principal']} - {bc['cid_descricao']}")
                print(f"   Gravidade: {bc['gravidade']}")
                print(f"   Justificativa: {bc['justificativa']}")
                print(f"   Progn√≥stico: {bc['progn√≥stico']}")
                
                if bc['tipo_beneficio'] == 'PERICIA_MEDICA':
                    print("‚úÖ CORRETO: Classificado como Per√≠cia M√©dica!")
                else:
                    print("‚ö†Ô∏è ATEN√á√ÉO: N√£o classificado como esperado")
            else:
                print("‚ùå Classifica√ß√£o n√£o retornada")
        else:
            print(f"‚ùå Erro HTTP: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Erro: {e}")

def test_frontend_classification():
    """Instru√ß√µes para testar no frontend"""
    
    print("\nüåê TESTE NO FRONTEND:")
    print("="*50)
    print("1. Abra: http://localhost:5003/consultation")
    print("2. No campo 'Informa√ß√µes do Paciente', cole:")
    print("\n   TESTE AUX√çLIO DOEN√áA:")
    print("   Pedro, 28 anos, oper√°rio. Fratura bra√ßo, cirurgia,")
    print("   recupera√ß√£o em 3 meses com fisioterapia.")
    print("\n   TESTE PER√çCIA:")
    print("   Ana, 62 anos, diabetes grave, neuropatia,")
    print("   cegueira parcial, insufici√™ncia renal.")
    print("\n3. Execute a an√°lise")
    print("4. Verifique a nova se√ß√£o 'Classifica√ß√£o Previdenci√°ria'")
    print("5. Confirme se mostra:")
    print("   - Tipo de Benef√≠cio (Aux√≠lio Doen√ßa ou Per√≠cia)")
    print("   - CID Principal com descri√ß√£o")
    print("   - Gravidade (Leve/Moderada/Grave)")
    print("   - Justificativa da classifica√ß√£o")

if __name__ == "__main__":
    print("üöÄ Testando nova funcionalidade de classifica√ß√£o...")
    
    import time
    print("‚è≥ Aguardando servidor (10s)...")
    time.sleep(10)
    
    # Testes automatizados
    test_auxilio_doenca()
    test_pericia_medica()
    
    # Instru√ß√µes para teste manual
    test_frontend_classification()
    
    print("\nüéØ RESUMO:")
    print("- ‚úÖ Sistema analisa o texto do paciente")
    print("- ‚úÖ Classifica automaticamente: Aux√≠lio Doen√ßa vs Per√≠cia")
    print("- ‚úÖ Sugere CID apropriado baseado nos sintomas")
    print("- ‚úÖ Determina gravidade e progn√≥stico")
    print("- ‚úÖ Frontend mostra classifica√ß√£o em destaque")
    
    print("\nÔøΩÔøΩ Teste conclu√≠do!") 
#!/usr/bin/env python3
"""
EXEMPLO PR√ÅTICO - Como usar o Sistema de An√°lise M√©dica
"""

import requests
import json
import time

def exemplo_auxilio_doenca():
    """Exemplo: Caso que ser√° classificado como Aux√≠lio Doen√ßa"""
    
    print("üß™ EXEMPLO 1: AUX√çLIO DOEN√áA")
    print("="*50)
    
    # Dados do paciente
    caso = {
        "titulo": "Mec√¢nico com fratura",
        "texto": """
        Roberto Silva, 32 anos, mec√¢nico automotivo.
        
        QUEIXA: Fratura do punho esquerdo em acidente de trabalho h√° 1 semana.
        
        HIST√ìRIA: Queda de ve√≠culo durante reparo, trauma direto no punho.
        
        SINTOMAS: Dor intensa (8/10), edema, limita√ß√£o total de movimento.
        
        EXAME: Deformidade vis√≠vel, crepita√ß√£o √≥ssea.
        
        TRATAMENTO: Cirurgia de fixa√ß√£o interna realizada com sucesso.
        
        PROGN√ìSTICO: Recupera√ß√£o esperada em 6-8 semanas com fisioterapia.
        """
    }
    
    return testar_caso(caso, "AUXILIO_DOENCA")

def exemplo_pericia_medica():
    """Exemplo: Caso que ser√° classificado como Per√≠cia M√©dica"""
    
    print("\nüß™ EXEMPLO 2: PER√çCIA M√âDICA")
    print("="*50)
    
    # Dados do paciente
    caso = {
        "titulo": "Professora com fibromialgia",
        "texto": """
        Sandra Costa, 48 anos, professora de ensino fundamental.
        
        QUEIXA: Fibromialgia severa h√° 8 anos, progressiva.
        
        HIST√ìRIA: Dor generalizada cr√¥nica, fadiga extrema, m√∫ltiplas consultas.
        
        SINTOMAS: Dor difusa (9/10), rigidez matinal por horas, ins√¥nia severa,
        depress√£o secund√°ria, incapacidade para permanecer em p√© por per√≠odos prolongados.
        
        MEDICA√á√ïES: Pregabalina 300mg/dia, tramadol, antidepressivos.
        
        EVOLU√á√ÉO: Piora progressiva, m√∫ltiplas licen√ßas m√©dicas.
        
        PROGN√ìSTICO: Doen√ßa cr√¥nica sem cura, incapacidade laboral permanente.
        """
    }
    
    return testar_caso(caso, "PERICIA_MEDICA")

def testar_caso(caso, esperado):
    """Testa um caso espec√≠fico"""
    
    url = "http://localhost:5003/api/intelligent-medical-analysis"
    
    print(f"üìã Caso: {caso['titulo']}")
    print(f"‚è≥ Enviando para an√°lise...")
    
    try:
        # Enviar requisi√ß√£o
        data = {'patient_info': caso['texto'].strip()}
        response = requests.post(url, data=data, timeout=60)
        
        if response.status_code == 200:
            result = response.json()
            
            # Extrair informa√ß√µes principais
            patient_data = result.get('patient_data', {})
            classification = result.get('benefit_classification', {})
            report = result.get('medical_report', '')
            
            # Exibir resultado resumido
            print(f"\n‚úÖ AN√ÅLISE CONCLU√çDA:")
            print(f"   üë§ Paciente: {patient_data.get('nome', 'N/A')}")
            print(f"   üìÖ Idade: {patient_data.get('idade', 'N/A')}")
            print(f"   üíº Profiss√£o: {patient_data.get('profissao', 'N/A')}")
            
            if classification:
                tipo = classification.get('tipo_beneficio', 'N/A')
                cid = classification.get('cid_principal', 'N/A')
                descricao = classification.get('cid_descricao', 'N/A')
                
                print(f"\nüè• CLASSIFICA√á√ÉO:")
                print(f"   üìã Tipo: {tipo}")
                print(f"   üè∑Ô∏è CID: {cid} - {descricao}")
                print(f"   ‚öñÔ∏è Gravidade: {classification.get('gravidade', 'N/A')}")
                
                # Verificar se classifica√ß√£o est√° correta
                if tipo == esperado:
                    print(f"   ‚úÖ CORRETO: Classificado como {esperado}")
                else:
                    print(f"   ‚ö†Ô∏è INESPERADO: Esperado {esperado}, obtido {tipo}")
            
            # Mostrar trecho do laudo
            if report:
                print(f"\nüìÑ TRECHO DO LAUDO:")
                linhas = report.split('\n')[:10]  # Primeiras 10 linhas
                for linha in linhas:
                    if linha.strip():
                        print(f"   {linha}")
                if len(report.split('\n')) > 10:
                    print("   ...")
                    
            return True
            
        else:
            print(f"‚ùå Erro HTTP: {response.status_code}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå ERRO: Servidor n√£o est√° rodando!")
        print("üí° Solu√ß√£o: cd backend/app && python main.py")
        return False
    except Exception as e:
        print(f"‚ùå Erro: {e}")
        return False

def verificar_servidor():
    """Verifica se o servidor est√° rodando"""
    
    print("üîç VERIFICANDO SERVIDOR...")
    
    try:
        response = requests.get("http://localhost:5003/api/health", timeout=5)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ Servidor ONLINE - {data.get('version', 'N/A')}")
            print(f"‚úÖ Services: {len(data.get('services', {}))}")
            return True
        else:
            print(f"‚ùå Servidor com problema: HTTP {response.status_code}")
            return False
    except:
        print("‚ùå Servidor OFFLINE")
        print("\nüí° COMO INICIAR:")
        print("1. cd /home/raquel/medical-exam-analyzer")
        print("2. cd backend/app")
        print("3. python main.py")
        return False

def main():
    """Fun√ß√£o principal - executa todos os exemplos"""
    
    print("üöÄ EXEMPLOS PR√ÅTICOS - SISTEMA DE AN√ÅLISE M√âDICA")
    print("="*60)
    print("üìå Este script demonstra como usar o sistema via API")
    print("")
    
    # Verificar se servidor est√° rodando
    if not verificar_servidor():
        return
    
    print("\n‚è≥ Aguardando sistema estabilizar...")
    time.sleep(3)
    
    # Executar exemplos
    exemplo1_ok = exemplo_auxilio_doenca()
    exemplo2_ok = exemplo_pericia_medica()
    
    # Resumo final
    print("\nüéØ RESUMO DOS TESTES:")
    print("="*40)
    
    if exemplo1_ok:
        print("‚úÖ Aux√≠lio Doen√ßa: FUNCIONANDO")
    else:
        print("‚ùå Aux√≠lio Doen√ßa: ERRO")
        
    if exemplo2_ok:
        print("‚úÖ Per√≠cia M√©dica: FUNCIONANDO")
    else:
        print("‚ùå Per√≠cia M√©dica: ERRO")
    
    if exemplo1_ok and exemplo2_ok:
        print("\nüéâ SISTEMA FUNCIONANDO PERFEITAMENTE!")
        print("\nüìã PR√ìXIMOS PASSOS:")
        print("1. Use a interface web: http://localhost:5003/consultation")
        print("2. Teste seus pr√≥prios casos m√©dicos")
        print("3. Veja o laudo completo gerado")
    else:
        print("\n‚ö†Ô∏è Alguns testes falharam - verificar configura√ß√£o")

if __name__ == "__main__":
    main() 
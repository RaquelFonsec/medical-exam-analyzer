import openai
from typing import Dict, Any
from ..config import settings

class LLMService:
    def __init__(self):
        # Configurar OpenAI com a nova vers√£o
        self.client = openai.OpenAI(api_key=settings.OPENAI_API_KEY)
        self.model = "gpt-4"
    
    async def generate_medical_report(self, exam_text: str, exam_type: str) -> str:
        """Gera relat√≥rio m√©dico usando LLM"""
        try:
            prompt = self._create_medical_prompt(exam_text, exam_type)
            return await self._openai_generate(prompt)
                
        except Exception as e:
            # Fallback se der erro
            return f"""
## üìã DADOS DO EXAME
- Tipo de exame: {exam_type}
- Status: Texto extra√≠do com sucesso

## üîç TEXTO EXTRA√çDO
{exam_text[:800]}

## ‚ö†Ô∏è AVISO
Sistema processou o arquivo, mas houve problema na an√°lise autom√°tica.
Por favor, consulte um m√©dico para interpreta√ß√£o adequada dos resultados.

## üè• RECOMENDA√á√ïES
- Levar este exame para consulta m√©dica
- Solicitar interpreta√ß√£o profissional
- Manter hist√≥rico de exames

Erro t√©cnico: {str(e)}
"""
    
    def _create_medical_prompt(self, exam_text: str, exam_type: str) -> str:
        """Cria prompt espec√≠fico para an√°lise m√©dica"""
        return f"""
Voc√™ √© um assistente m√©dico especializado em an√°lise de exames laboratoriais.

TIPO DE EXAME: {exam_type}

TEXTO EXTRA√çDO DO EXAME:
{exam_text}

Analise este exame e gere um relat√≥rio estruturado:

## üìã DADOS DO EXAME
- Tipo de exame identificado
- Principais par√¢metros encontrados

## üîç PRINCIPAIS ACHADOS
- Liste os valores num√©ricos identificados
- Identifique as unidades de medida
- Destaque par√¢metros importantes

## ‚ö†Ô∏è AN√ÅLISE DOS VALORES
- Compare com valores de refer√™ncia (quando dispon√≠veis)
- Identifique poss√≠veis altera√ß√µes
- Categorize como: normal, elevado, diminu√≠do

## üìä INTERPRETA√á√ÉO CL√çNICA
- Significados cl√≠nicos dos achados
- Correla√ß√µes entre par√¢metros
- Poss√≠veis implica√ß√µes

## üéØ PONTOS DE ATEN√á√ÉO
- Valores que merecem aten√ß√£o m√©dica
- Recomenda√ß√µes para acompanhamento
- Sugest√µes de exames complementares

## ‚öñÔ∏è LIMITA√á√ïES
- Este relat√≥rio √© apenas informativo
- N√£o substitui consulta m√©dica profissional
- Interpreta√ß√£o automatizada pode ter limita√ß√µes

IMPORTANTE: Sempre consulte um m√©dico qualificado.
"""
    
    async def _openai_generate(self, prompt: str) -> str:
        """Gera resposta usando OpenAI"""
        try:
            response = self.client.chat.completions.create(
                model=self.model,
                messages=[
                    {"role": "system", "content": "Voc√™ √© um assistente m√©dico especializado em an√°lise de exames."},
                    {"role": "user", "content": prompt}
                ],
                temperature=0.3,
                max_tokens=2000
            )
            
            return response.choices[0].message.content
            
        except Exception as e:
            raise Exception(f"Erro OpenAI: {str(e)}")
